#!/bin/sh

awk() {
	/usr/bin/awk "$@"
}

paste() {
	/usr/bin/paste "$@"
}

tail() {
	/usr/bin/tail "$@"
}

tr() {

	/usr/bin/tr "$@"
}

foo() {
	shift $1;
	la="$1"
}

# set most recent input file
foo $# "$@"

foo() {
	printf '%s/%s/%s' $3 $4 $2
}

# set date
co="$IFS"
IFS=-
da=`foo $la` || exit
IFS="$co"

g0=Illinois
g1='Chicago,Cook'
g2='McHenry,Lake,Kane,DuPage,Kendall,Will,Grundy,Kankakee'
g3='Winnebago,Boone,DeKalb,Ogle'
g4='Rock Island,Whiteside,Henry'
g5='St. Clair,Madison,Monroe,Randolph,Jackson'
g6='Champaign,McLean,Tazewell,Peoria'
g7='Sangamon,Macon,Christian'
g8='Kane'
cg="!$g1","$g2","$g3","$g4","$g5","$g6","$g7","$g8","$g0"

ot=Other
ev=ot

ab=red
be=green

#for co in "$g0"; do
#ot=Cook; ev=ot; IFS=,; for co in "$g1" $g2; do
for co in "$cg" "$g1" "$g2" "$g3" "$g4" "$g5" "$g6" "$g7" "$g8" "$g0"; do
	eval la="\$$ev"; ev=co
	for rs in 'confirmed cases' deaths; do
		echo  "$rs $la" >&2
		./totals select="$co" result="$rs" "$@" >totc

		of="`printf '%s' "$la" | tr 'A-Z' 'a-z' | tr -Cs 'a-z0-9' _`"
		case "$rs" in
		  'confirmed cases')
			rs=cases
			;;
		  'total tested')
			rs=tested
			;;
		esac

		# last
		di=`./filter f=tot totc` || continue

		# remove interpolated points
		awk 'NF == 3 { print $3, $2, $1 }' tot >totc

		awk '{ print $3 - n, $2 - t, $1; t = $2 }' n="$di" totc >daily

		# gen dday & table
		gnuplot -d -c ./stats tot "$di" `awk 'NR == 1 {
		print $1; exit }' tot`

		# gen ftot
		./match dday tot | ./step >ftot

		# percentage
		pa=`awk 'END { printf("%.1f%%", $3) }' dday`

		# daily increase
		di=`awk 'END { printf("+%d\n", $3) }' RS= ftot`

		# total
		ta=`awk 'END { print $2 }' tot`

		# doubling-time from a week ago (damped) and now (undamped)
		ca=`awk '/^#/ { next }
		$3 == "i" {
			i = $2
			printf("%.1f - ", i)
			while (getline) {
				if ($3 != "i") exit

				i = $2
			}
		}

		END { printf("%.1f", i) }' table`

		./label dday >labels

		of="$of"-"$rs"
		/bin/rm -f a.png b.png "$of".png "$of"_g.png || exit
		gnuplot -d l.gp -c trends\
		  "$da $la $pa $di" "$ta $rs" "$ca"\
		  "$ab" "$be" && \
		{ /bin/mv a.png "$of".png || exit; }
		./groovy "$rs $la $da" || exit
		/bin/mv b.png "$of"_g.png || exit

		#exit
	done
done
