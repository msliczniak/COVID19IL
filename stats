# The linaear log log stats line is not a very good and it takes an order of
# magnitude more estimations for the fit command to converge. It's just too
# slow so I haev commented it out. It does do a decent job of showing where a
# logistic curve switches between exponential and power law behavior.

#printerr ARG1
last = ARG2 + 0
first = ARG3 + 0
n = last - first
#printerr first, last, n

if (n <= 0) {
	# make empty output files
	set table 'table'; unset table
	set print 'dday'; set print '-'
	unset output

	exit status 1
}

i = first
j = i + 1
k = n > 7 ? 7 : n
#printerr i, j, k

set table '/dev/null'
P = 0; r = 0
plot ARG1 index 0 every 1:1:0:0:1:0 u (r = P, P = $2):1 w table

set print 'dday'
r = P/r
print j - last, r, r*100 - 100, P

i = first
j = j + 1
#printerr i, j, k

f(x) = P*r**x; set fit logfile '/dev/null'; set fit quiet
g(x) = x
#h(x) = a*x**k; set fit errorvariables; #set fit prescale

do for [n = first + k - 2 : last : last - first - k + 2] {
	#printerr n
	while (j <= n) {
		#printerr i, j
		set xrange [i:j]
		stats '' u 1:(log($2)) noout
		r = exp(STATS_slope); P = exp(STATS_intercept)
		#c = STATS_correlation
		#c = STATS_intercept_err
		#s = STATS_slope_err
		#if (STATS_slope_err != 0) {
		#	fit f(x) '' via r, P
		#	c = FIT_STDFIT
		#} else {
		#	r_err = P_err = c = 0
		#}
		if (STATS_slope_err != 0) { fit f(x) '' via r, P }

		#set xrange [log(i):log(j)]
		#stats '' u (log($1)):(log($2)) noout
		#k = STATS_slope; a = exp(STATS_intercept)
		#set xrange [i:j]
		#if (STATS_slope_err != 0) { fit h(x) '' via k, a }
		#else { k_err = a_err = FIT_STDFIT = 0 }

		print j - last, r, r*100 - 100, P*r**j\
		#, P_err, a_err\
		#, r_err, k_err, c, FIT_STDFIT, s, STATS_slope_err, a*j**k

		i = g(i)
		j = j + 1
	}

	g(x) = x + 1
}

#printerr n
set print '-'; unset output
d = log(2)
set format y "%.15f"
set table 'table'
set samples n > 1 ? n : 2
j = j - last
plot [j - k:j][0:1]\
'dday' u 1:(d/log($2)) sm bezier w point title 'time'\
, '' u 1:3 sm bezier w point title 'rate'
unset table; unset output

#base = 9; offset = 1; plot '../../us/dday' u 1:(column(base)) w linespoints, '' u 1:(column(base + offset)) w linespoints, '' u 1:(column(base) - column(base + offset)) ax x1y2 sm bezier
