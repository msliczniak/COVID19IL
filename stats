last = ARG2 + 0
first = ARG3 + 0
n = last - first
#printerr first, last, n

if (n <= 0) {
	# make empty output files
	set table 'table'; unset table
	set print 'dday'; set print '-'
	unset output

	exit status 1
}

i = first
j = i + 1
k = n > 7 ? 7 : n
#printerr i, j, k

set table '/dev/null'
P = 0; r = 0
plot ARG1 index 0 every 1:1:0:0:1:0 u (r = P, P = $2):1 w table

set print 'dday'
r = P/r
print j - last, r, r*100 - 100, P

i = first
j = j + 1
#printerr i, j, k

f(x) = P*r**x; set fit quiet; set fit logfile '/dev/null'
g(x) = x

do for [n = first + k - 2 : last : last - first - k + 2] {
	#printerr n
	while (j <= n) {
		#printerr i, j
		set xrange [i:j]
		stats '' u 1:(log($2)) noout
		r = exp(STATS_slope); P = exp(STATS_intercept)
		if (STATS_slope_err != 0) { fit f(x) '' via r, P }
		print j - last, r, r * 100 - 100, P*r**j
		i = g(i)
		j = j + 1
	}

	g(x) = x + 1
}

#printerr n
set print '-'; unset output
d = log(2)
set format y "%.15f"
set table 'table'
set samples n > 1 ? n : 2
j = j - last
plot [j - k:j][0:1]\
'dday' u 1:(d/log($2)) sm bezier w point title 'time'\
, '' u 1:3 sm bezier w point title 'rate'
unset table; unset output
