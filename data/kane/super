#!/usr/bin/awk -f

BEGIN { FS="\n" } # never split fields

function sp() { # space
	state = 0

	print substr($0, 3)
}

function mi() { # minus
	state = 1

	a[an++] = substr($0, 3)
}

function pl() { # plus
	if (state) state++

	b[bn++] = substr($0, 3)
}

function qu() { # question-mark
	if (state) state++
}

function sm() { # state machine
	if (state < 3) return

	state = 0; bn--; 
	if (a[--an] ~ /^0/) b[bn] = "0" substr(b[bn], 2)
	print b[bn]
}

function ol() { # handle one line
	if ($0 ~ /^\+ /) pl()
	else if ($0 ~ /^- /) mi()
	else if ($0 ~ /^\? /) qu()
	else sp() # after the first time, space happens very rarely if at all
	sm()
}

{
	if ($0 ~ /^  /) sp() # first time through space happens most often
	else if ($0 ~ /^\+ /) pl()
	else if ($0 ~ /^- /) mi()
	else qu()
	sm()
}

END {
	n = 0
	while (n != an) {
		n = an
		for (i = 0; i < an; i++) print a[i] > "a"
		for (i = 0; i < bn; i++) print b[i] > "b"
		fflush("a"); close("a")
		fflush("b"); close("b")

		state = an = bn = 0
		while ("./ndiff -q a b" | getline == 1) ol()
		close("./ndiff -q a b")

		if (an == 0) exit
	}

	for (i = 0; i < an; i++) print a[i]
}
