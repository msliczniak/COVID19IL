#!/bin/sh

#d=-dpng
d='-dpngcairo size 820,440'

awk() {
	/usr/bin/awk "$@"
}

paste() {
	/usr/bin/paste "$@"
}

foo() {
	shift $1;
	la="$1"
}

# set most recent input file
foo $# "$@"

foo() {
	printf '%d.%d.%d' $3 $2 $1
}

# set date
co="$IFS"
IFS=-
da=`foo $la` || exit
IFS="$co"

# split on |
foo() {
	echo $*
}
IFS='|'

# r = n[(A/P)^(1/nt) - 1]
TVM='{
	i = 1
	ii = index($i, "-") - 1

	j = substr($i, 1, ii) + 0
	P = substr($i, ii + 12) + 0

	while (i < NF) {
		i += 1
		ii = index($i, "-") - 1

		n = substr($i, 1, ii) - j
		A = substr($i, ii + 12) + 0

		print substr($i, ii + 2, 10), exp(1/n * log(A/P)), n
	}
}'

# k=samples
TREND='{
	j = 1; i = k
	while (i <= NF) {
		ii = index($i, "-") - 1
		jj = index($j, "-") - 1
		n = substr($i, 1, ii) - substr($j, 1, jj)
		A = substr($i, ii + 12) + 0
		P = substr($j, jj + 12) + 0

		print substr($i, ii + 2, 10), exp(1/n * log(A/P))
		j += 1; i += 1
	}
}'

# doubling-time in hours
dhrs() {
	awk 'BEGIN { d = log(2) * 24 } { print $1, d/log($2) }' "$@"
}

predict() {
	paste "$@" | awk 'NR == 1 { P = $2; r = $4; next }
	NF < 5 { exit }
	{ print $3, P * exp($5 * log(r)); r = $4 }'

	return # gnuplot does not get xrange right with Y-m-d-24
	paste "$@" | awk 'NR == 1 { P = $2; r = $4; t = $5; next }
	NF < 5 { t += 1; print $3 "-24", P * exp(t * log(r)); exit }
	{ t = $5; print $3, P * exp(t * log(r)); r = $4 }'
}

FOO='{ printf("%s-%s-%s %s\n", $2, $3, substr($4, 1, 2), substr($4, 3)) }'

la='|lubuskie|małopolskie|podkarpackie'
for co in 'Cała Polska' 'mazowieckie|podlaskie|lubelskie|świętokrzyskie' \
  'pomorskie|zachodniopomorskie|kujawsko-pomorskie|warmińsko-mazurskiei' \
  'łódzkie|wielkopolskie|dolnośląskie|opolskie|śląskie'"$la" ; do
	for rs in 'liczba' 'liczba zgonów'; do
		la=`foo $co`
		echo  "$rs $la" >&2

		./totals select="$co" result="$rs" "$@" >tot
		awk '$2 != t { print NR "-" $1 $2; t = $2 }' tot >total
		awk "$TREND" RS= k=5 total | dhrs >5
		awk "$TREND" RS= k=10 total | dhrs >10
		awk "$TREND" RS= k=15 total | dhrs >15
		awk "$TVM" RS= total >tvm
		pa=`awk 'END { printf("%.1f%%", $2 * 100 - 100) }' tvm`
		dhrs tvm >dhrs
		awk -F- "$FOO" total >tot
		ta=`awk 'END { print $2 }' tot`
		ca=`awk 'END { printf("%.2f", $2/24) }' dhrs`
		predict tot tvm >pred
		gnuplot -c trends "$da $la $pa" "$rs = $ta" "$ca"
		/bin/mv a.png "$co"-"$rs".png
	done
done
