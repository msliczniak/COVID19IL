#!/bin/sh

#d=-dpng
d='-dpngcairo size 820,440'

awk() {
	/usr/bin/awk "$@"
}

paste() {
	/usr/bin/paste "$@"
}

sort() {
	/usr/bin/sort "$@"
}

tail() {
	/usr/bin/tail "$@"
}

st=$1; shift

foo() {
	shift $1;
	la="$1"
}

# set most recent input file
foo $# "$@"

foo() {
	printf '%s/%s/%s' $2 $3 $1
}

# set date
co="$IFS"
IFS=-
da=`foo $la` || exit
IFS="$co"

# split on |
foo() {
	echo $*
}
IFS='|'

# r = n[(A/P)^(1/nt) - 1]
TVM='{
	i = 1
	ii = index($i, "-") - 1

	j = substr($i, 1, ii) + 0
	P = substr($i, ii + 12) + 0

	while (i < NF) {
		i += 1
		ii = index($i, "-") - 1

		n = substr($i, 1, ii) - j
		A = substr($i, ii + 12) + 0

		print substr($i, ii + 2, 10), exp(1/n * log(A/P)), n
	}
}'

trend() {
	# k=samples
	awk '{
	j = 1; i = k
	while (i <= NF) {
		ii = index($i, "-") - 1
		jj = index($j, "-") - 1
		n = substr($i, 1, ii) - substr($j, 1, jj)
		A = substr($i, ii + 12) + 0
		P = substr($j, jj + 12) + 0

		print substr($i, ii + 2, 10), exp(1/n * log(A/P))
		j += 1; i += 1
	} }' RS= k="$1" $2
}

# doubling-time in hours
dday() {
	awk 'NR == 1 {
	if ($2 <= 1) {
		print $1, $2
		exit
	}

	d = log(2)
	} { print $1, d/log($2) }' "$@"
}

predict() {
	paste "$@" | awk 'NR == 1 { P = $2; r = $4; next }
	NF < 5 { exit }
	{ print $3, P * exp($5 * log(r)); r = $4 }'
}

labels() {
	awk 'BEGIN { print 0 } { print $3 }' $2 | paste $1 - | awk '
	{ d[NR] = $1; v[NR] = $2; n[NR] = $3 }
	END {

		f = int((n[NR] - n[2])/15)
		g = 0
		i = NR
		for (j = NR - 1; j > 0; j--) {
			if (g < f) {
				c = n[j] - n[j - 1]
				g += c
				continue
			}

			g = 0

			A = v[i]
			printf("%s %s ", d[i], A)

			s = sprintf("%.2e", A)
			split(s, a, "e")
			printf("%s_{10^{%d}}\\n", a[1], a[2]);

			P = v[j]
			c = exp(1/(n[i] - n[j]) * log(A/P))
			printf("%.1f^%%\\n", c * 100 - 100)

			c = A - P
			printf("%s\n", c)

			i = j
		}
	}'
}

FOO='{ printf("%s-%s-%s %s\n", $2, $3, substr($4, 1, 2), substr($4, 3)) }'

tc=totc

for co in "$st"; do
	ab=red
	be=green

	case "$co" in
	  ..)
		co=US
		;;
	esac

	for rs in positive death hospitalized totalTestResults; do
		la=`foo $co`
		echo  "$rs $la" >&2

		./totals select="$st" result="$rs" "$@" >"$tc"

		of="$co"-
		case "$rs" in
		  positive)
			rs=cases
			of="$of"2c
			;;
		  death)
			rs=deaths
			of="$of"2d
			;;
		  totalTestResults)
			rs=tested
			of="$of"5t

		        # change sense
			ab=green
		        be=red
			;;
		  hospitalized)
			rs=hospitalized
			of="$of"8h
			;;
		esac

		awk '{ print $3 "-" $1 $2 }' "$tc" >total; tc=toti
		trend 5 total >5t
		dday 5t >5
		trend 10 total | dday >10
		trend 15 total | dday >15
		awk "$TVM" RS= total >tvm
		pa=`awk 'END { printf("%.1f%%", $2 * 100 - 100) }' tvm`
		dday tvm >dday
		awk -F- "$FOO" total >tot
		ta=`awk 'END { print $2 }' tot`
		ca=`awk 'END { printf("%.1f", $2) }' dday`
		predict tot tvm >pred
		awk 'BEGIN { print; print } { print $2 }' pred | # filled-curve
		  paste tot - | # skip early point(s)
		  awk 'NF == 2 { print $0, $2; next } { print }' >ftot
		labels tot tvm >labels

		# %chg for the last day
		p=`tail -2 total | trend 2 | awk '{ print $2 }'` || exit

		# amortized daily %chg 
		r=`awk 'END { print $2 }' tvm` || exit

		awk 'END {
			t = int($2 * p + .5)
			p = p * 100 - 100
			printf("%s-24 %s %s\\n%.1f%%*\\n+%s\n",
			  $1, t, t, p, t - $2)
		}' p=$p tot >xtotl
		awk 'END { ti = t = $2
		for (i = -24; i >= -96; i -= 24) {
			t *= r; ti *= p
			print $1 i, ti, t } }' r="$r" p="$p" ftot >xtot

		for i in 5 10 15; do
			r=`tail -$i tvm | awk '{ print $2; exit }'`
			>x$i awk 'END { t = $2
				for (i = -24; i >= -96; i -= 24) {
					t *= r
					print $1 i, t } }' r="$r" ftot
		done

		awk '$2 != t { print NR "-" $1 $2; t = $2 }' dday >fdday
		p=`tail -2 fdday | trend 2 | awk '{ print $2 }'` || exit
		awk -F- "$FOO" fdday >dday
		awk 'NR == 1 { d = $2 } { print $0, d; d = $2 }' dday >fdday
		awk 'END { t = $2
		for (i = -24; i >= -96; i -= 24) {
			t *= p
			print $1 i, t, $2 } }' p="$p" fdday >xdday
		awk '{
			printf("%s %s %.1f\\n%.1f_%%*\n",
			  $1, $2, $2, p * 100 - 100)
			exit
		}' p=$p xdday >xl
		awk '{ print $0, $2; exit }' tot >ol
		i=`tail -3 tot | awk '{ print $2; exit }'`
		tail -3 5t | awk '{ print $1, t
			for (i = -24; i >= -96; i -= 24) {
			t *= $2; print $1 i, t }; exit }' t="$i" >x5t
		di=+`awk '{ ll = l; l = $2 } END { print l - ll }' tot`

		/bin/rm -f a.png "$of".png || exit
		gnuplot ../../l.gp -c ../../trends\
		  "$da $la $pa $di" "$ta $rs" "$ca" "$ab" "$be" &&\
		{ /bin/mv a.png "$of".png || exit; }

		#exit
	done
done

/bin/rm -f tot ratio.png "$co"-5r.png || exit
awk '{
	printf("\"%s/%s/%s\" %s",
	  substr($1, 6, 2), substr($1, 9, 2), substr($1, 1, 4), $2); i++
	if (i >= n) { i = 0; printf(" %.1f", $2) }
	printf("\n")
}' n=`awk '{ print $0, "t" }' toti | sort -mnk3 totc - | awk 'd != $1 && t > 0 {
	print d, c * 100 / t >"tot"
	d = $1; n++
} 

NF == 4 { t = $2 }

NF == 3 { c = $2 }

END { print int(n/32) + 1 }'` tot >ratio
ti=`tail -5 ratio | awk '{ t += $2 } END { printf("%.1f", t / NR) }'`
gnuplot -c ../../ratioplot\
  "$da $co"' 5 sample test-positivity rate '"$ti" || exit
/bin/mv ratio.png "$co"-5r.png
